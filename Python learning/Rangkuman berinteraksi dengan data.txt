Rangkuman Berinteraksi dengan Data
Kita sudah berada di penghujung materi Berinteraksi dengan Data. Sampai sini, Anda telah memiliki pemahaman mendasar mengenai data dalam Python. Mari kita rangkum secara saksama.

Abstraksi Data
Abstraksi data merupakan kemampuan Anda untuk mengerti konteks dan merepresentasikannya menjadi bentuk lain sesuai dengan konteks masalahnya. 

Ketika menuliskan data dalam pemrograman, komputer tidak akan mengetahui data yang dimaksud hingga Anda mendeklarasikan tipe datanya.

Data Typing
Dalam pemrograman, Anda harus mengenali istilah deklarasi dan inisialisasi yang umum ditemui ketika membuat sebuah program.

Deklarasi dan Inisialisasi
Deklarasi merujuk pada pembuatan variabel dengan menentukan tipe data dan nama variabelnya. Contohnya seperti berikut yang merupakan deklarasi dalam pemrograman C/C++.

int age;
float salary;
Inisialisasi merujuk kepada pemberian nilai awal pada variabel yang sebelumnya telah dideklarasikan. Contohnya seperti berikut yang merupakan deklarasi dalam pemrograman C/C++.

int age = 17;
float salary = 5000000;
Dalam Python, Anda tidak diharuskan mendeklarasikan tipe data variabel. Anda dapat langsung melakukan inisialisasi variabel. 

age = 17
salary = 5000000.0
 
print(type(age))
print(type(salary))
 
"""
Output:
<class 'int'>
<class 'float'>
 
"""


Tipe Data
Sebuah data memiliki tipe yang berbeda-beda. Dalam Python, Tipe data dapat dikelompokkan menjadi tipe data primitif dan tipe data collection.

Tipe Data Primitif
Tipe data primitif merupakan jenis data yang paling dasar dalam pemrograman. Tipe data ini menyimpan single value. Beberapa tipe data primitif sebagai berikut.

Numbers
Integer: Bilangan bulat positif atau negatif dan tidak memiliki angka desimal. Contoh: 1; -20; 999; dan 0.
Float: Bilangan riil yang dapat mewakili bilangan bulat atau bilangan desimal. Contoh: 3.14; 1; dan 4.01E+1
Complex: Bilangan kompleks. (Kita tidak akan menggunakannya di kelas ini.) Contoh: 1+2j
Boolean
Boolean merupakan tipe data yang hanya bernilai TRUE atau FALSE. Tipe data ini merepresentasikan nilai kebenaran (truth values).
True
False
Sebenarnya, setiap variabel yang memiliki nilai bisa dievaluasi dan menghasilkan nilai true. Hanya ada beberapa nilai yang akan dianggap bernilai false, yakni berikut.

Nilai yang sudah didefinisikan bernilai salah: None dan False.
Angka nol dari semua tipe numerik: 0, 0.0, 0j, Decimal(0), Fraction(0,1).
Urutan (sequence) dan koleksi (collection) yang kosong: "", (), {}, set(), range(0).
String
String merupakan karakter yang berurutan. Ketika Anda membuat variable bernilai string maka akan diawali dengan single quote ('') atau double quote("").
"Dicoding Indonesia"


Tipe Data Collection
Selain tipe data primitif yang menyimpan single value, ada tipe data lain, yakni tipe data collection. Tipe data ini menyimpan satu atau lebih data primitif sebagai satu kelompok. Berikut adalah tipe data yang masuk ke dalam tipe data collection.

List
List merupakan jenis kumpulan data terurut (ordered sequence) dan salah satu tipe data yang sering digunakan pada Python.

Melakukan inisialisasi list pada Python cukup mudah: menggunakan kurung siku "[]" dan setiap elemennya dipisahkan dengan koma.
x = [1, 2.2, "Dicoding"]
Perlu diingat bahwa nilai yang ada dalam sebuah list selalu dimulai dari indeks ke-0. Artinya, nilai "1" pada list di atas merupakan indeks ke-0.
Tuple
Tuple merupakan jenis dari list yang tidak dapat diubah elemennya. Umumnya, tuple digunakan untuk data yang bersifat sekali deklarasi dan dapat dieksekusi lebih cepat. Anda dapat mendeklerasikan tuple dengan menggunakan tanda kurung "()" dan setiap elemen di dalamnya dipisahkan dengan koma.
x = (1, "Dicoding", 1+3j)
Set
Set merupakan kumpulan item bersifat unik dan tanpa urutan (unordered collection). Anda dapat melakukan inisialisasi variabel set dengan menggunakan tanda kurawal "{}" dan setiap elemennya dipisahkan dengan koma.
x = {1, 2, 3 , 7, 13}
Dictionary
Dictionary pada Python merupakan kumpulan pasangan key-value yang bersifat tidak berurutan. Dictionary dapat digunakan untuk menyimpan data kecil hingga besar. Pada Python, dictionary didefinisikan dengan kurawal dan tambahan definisi berikut.
Setiap elemen pasangan key-value dipisahkan dengan koma (,).
Key dan value dipisahkan dengan titik dua (:).
Key dan value dapat berupa tipe variabel/objek apa pun.
x = { 'name': 'Perseus Evans', 'age': 20, 'isMarried': False }
Konversi antara Tipe Data
Anda pun dapat melakukan konversi antar tipe data dengan menggunakan beberapa fungsi yang tersedia pada Python. Fungsi merupakan blok kode yang dapat dipanggil untuk melakukan tugas tertentu. Beberapa fungsi yang dapat digunakan untuk mengonversi tipe data pada Python sebagai berikut.

Konversi integer ke float: float().
Konversi float ke integer: int().
Konversi dari-dan-ke string: str(), float(), int().


Transformasi Angka, Karakter, dan String
Khusus tipe data string, terdapat berbagai fungsi untuk mentransformasikan tipe data string menjadi bentuk lain. Beberapa di antaranya berikut.

Mengubah Huruf Besar/Kecil
Mengubah string menjadi UPPERCASE atau lowercase.
upper()
lower()
Awalan dan Akhiran
Menghapus karakter whitespace pada suatu string.
rstrip()
lstrip()
strip()
startswith()
endswith()
Memisah dan Menggabung String
Fungsi-fungsi untuk memisahkan dan menggabungkan string.
join()
split()
Mengganti Elemen String
Metode yang bertujuan untuk mengganti elemen string dengan elemen string lainnya.
replace()
Pengecekan String
Fungsi-fungsi yang bertujuan untuk melakukan pengecekan pada string dan mengembalikan nilai Boolean.
isupper()
islower()
isalpha()
isalnum()
isdecimal()
isspace()
istitle()
Formatting pada String
Fungsi-fungsi untuk pemformatan string.
zfill()
rjust()
ljust()
center()
String Literals
String literals adalah serangkaian karakter yang diapit oleh tanda kutip baik tunggal (') maupun ganda (").

String dapat ditulis mudah dalam Python dengan cara diapit oleh tanda petik tunggal. Namun, dalam kondisi tertentu, dibutuhkan petik tunggal di tengah string (misalnya struktur kepemilikan dalam Bahasa Inggrisâ€”Dicoding's Cat atau penyebutan Jum'at pada hari dalam bahasa Indonesia).

Solusinya adalah menggunakan escape character yang memungkinkan Anda untuk menggunakan karakter yang sebelumnya tidak bisa dimasukkan dalam string. Umumnya diawali dengan backslash (\) dan diikuti karakter tertentu yang diinginkan. Beberapa contoh escape charactersebagai berikut.
\' Single quote
\" Double quote
\t Tab
\n Newline (line break)
\\ Backslash
Raw String
Merupakan cara untuk mencetak string sesuai dengan apa pun input atau teks yang diberikan. Umumnya digunakan untuk regex atau beberapa implementasi lain yang sangat bergantung pada keberadaan backslash. Untuk mengimplementasikan raw strings, sisipkan huruf r sebelum pembuka string.
print(r'Dicoding\tIndonesia')
 
"""
Output:
Dicoding\tIndonesia
"""

Operasi pada List, Set, dan String
Ada beberapa fungsi untuk melakukan operasi pada list, set, dan string. Berikut beberapa di antaranya.

len()
Fungsi yang bertujuan untuk menghitung panjang atau banyaknya elemen dari list, set, dan string.
contoh_list = [1, 3, 3, 5, 5, 5, 7, 7, 9]
 
print(contoh_list)
print(len(contoh_list))
 
"""
Output:
[1, 3, 3, 5, 5, 5, 7, 7, 9]
 
9
"""
min() dan max()
Fungsi yang digunakan untuk mengetahui nilai minimum dan maksimum dari suatu list.
angka = [13, 7, 24, 5, 96, 84, 71, 11, 38]
print(min(angka))
print(max(angka))
 
"""
Output:
5
96
"""
count()
Fungsi yang digunakan untuk mengetahui berapa kali suatu objek muncul dalam list.
genap = [2, 4, 4, 6, 6, 6, 8, 10, 10]
print(genap.count(6))
 
 
"""
Output:
3
"""
In dan Not In
In dan not in merupakan operator yang diperuntukkan untuk mengetahui nilai atau objek yang ada dalam list. Anda bisa menggunakan operator ini untuk memastikan suatu nilai ada dalam list bahkan dalam string. Operatori in dan not inakan mengembalikan nilai boolean True atau False.
kalimat = "Belajar Python di Dicoding sangat menyenangkan"
print('Dicoding' in kalimat)
print('tidak' in kalimat)
print('Dicoding' not in kalimat)
print('tidak' not in kalimat)
 
"""
Output:
True
False
False
True
"""
Memberikan Nilai untuk Multiple Variable
Anda dapat memberikan nilai untuk multiple variable dengan cara berikut.
data = ['shirt', 'white', 'L']
apparel, color, size = data
 
print(data)
 
"""
Output:
['shirt', 'white', 'L']
"""
sort()
Fungsi sort() digunakan untuk mengurutkan angka atau huruf. Berikut contoh implementasinya.
kendaraan = ['motor', 'mobil', 'helikopter', 'pesawat']
kendaraan.sort()
 
print(kendaraan)
 
"""
Output:
 ['helikopter', 'mobil', 'motor', 'pesawat']
"""